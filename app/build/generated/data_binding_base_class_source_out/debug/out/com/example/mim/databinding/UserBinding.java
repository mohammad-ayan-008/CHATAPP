// Generated by view binder compiler. Do not edit!
package com.example.mim.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.mim.R;
import de.hdodenhof.circleimageview.CircleImageView;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class UserBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final TextView BIO;

  @NonNull
  public final LinearLayout coordinator;

  @NonNull
  public final TextView nameText;

  @NonNull
  public final CircleImageView profileImage;

  @NonNull
  public final TextView statusText;

  private UserBinding(@NonNull LinearLayout rootView, @NonNull TextView BIO,
      @NonNull LinearLayout coordinator, @NonNull TextView nameText,
      @NonNull CircleImageView profileImage, @NonNull TextView statusText) {
    this.rootView = rootView;
    this.BIO = BIO;
    this.coordinator = coordinator;
    this.nameText = nameText;
    this.profileImage = profileImage;
    this.statusText = statusText;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static UserBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static UserBinding inflate(@NonNull LayoutInflater inflater, @Nullable ViewGroup parent,
      boolean attachToParent) {
    View root = inflater.inflate(R.layout.user, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static UserBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.BIO;
      TextView BIO = ViewBindings.findChildViewById(rootView, id);
      if (BIO == null) {
        break missingId;
      }

      LinearLayout coordinator = (LinearLayout) rootView;

      id = R.id.nameText;
      TextView nameText = ViewBindings.findChildViewById(rootView, id);
      if (nameText == null) {
        break missingId;
      }

      id = R.id.profile_image;
      CircleImageView profileImage = ViewBindings.findChildViewById(rootView, id);
      if (profileImage == null) {
        break missingId;
      }

      id = R.id.statusText;
      TextView statusText = ViewBindings.findChildViewById(rootView, id);
      if (statusText == null) {
        break missingId;
      }

      return new UserBinding((LinearLayout) rootView, BIO, coordinator, nameText, profileImage,
          statusText);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
