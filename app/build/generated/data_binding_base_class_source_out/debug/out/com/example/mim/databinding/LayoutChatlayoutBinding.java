// Generated by view binder compiler. Do not edit!
package com.example.mim.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.EditText;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.recyclerview.widget.RecyclerView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.mim.R;
import com.google.android.material.appbar.MaterialToolbar;
import com.google.android.material.button.MaterialButton;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class LayoutChatlayoutBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final ImageView IMG;

  @NonNull
  public final MaterialButton Img;

  @NonNull
  public final MaterialToolbar MToolbar;

  @NonNull
  public final EditText Message;

  @NonNull
  public final RecyclerView Recycleraview;

  @NonNull
  public final MaterialButton Send;

  @NonNull
  public final TextView Text;

  @NonNull
  public final LinearLayout coordinator;

  private LayoutChatlayoutBinding(@NonNull LinearLayout rootView, @NonNull ImageView IMG,
      @NonNull MaterialButton Img, @NonNull MaterialToolbar MToolbar, @NonNull EditText Message,
      @NonNull RecyclerView Recycleraview, @NonNull MaterialButton Send, @NonNull TextView Text,
      @NonNull LinearLayout coordinator) {
    this.rootView = rootView;
    this.IMG = IMG;
    this.Img = Img;
    this.MToolbar = MToolbar;
    this.Message = Message;
    this.Recycleraview = Recycleraview;
    this.Send = Send;
    this.Text = Text;
    this.coordinator = coordinator;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static LayoutChatlayoutBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static LayoutChatlayoutBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.layout_chatlayout, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static LayoutChatlayoutBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.IMG;
      ImageView IMG = ViewBindings.findChildViewById(rootView, id);
      if (IMG == null) {
        break missingId;
      }

      id = R.id.Img;
      MaterialButton Img = ViewBindings.findChildViewById(rootView, id);
      if (Img == null) {
        break missingId;
      }

      id = R.id.MToolbar;
      MaterialToolbar MToolbar = ViewBindings.findChildViewById(rootView, id);
      if (MToolbar == null) {
        break missingId;
      }

      id = R.id.Message;
      EditText Message = ViewBindings.findChildViewById(rootView, id);
      if (Message == null) {
        break missingId;
      }

      id = R.id.Recycleraview;
      RecyclerView Recycleraview = ViewBindings.findChildViewById(rootView, id);
      if (Recycleraview == null) {
        break missingId;
      }

      id = R.id.Send;
      MaterialButton Send = ViewBindings.findChildViewById(rootView, id);
      if (Send == null) {
        break missingId;
      }

      id = R.id.Text;
      TextView Text = ViewBindings.findChildViewById(rootView, id);
      if (Text == null) {
        break missingId;
      }

      LinearLayout coordinator = (LinearLayout) rootView;

      return new LayoutChatlayoutBinding((LinearLayout) rootView, IMG, Img, MToolbar, Message,
          Recycleraview, Send, Text, coordinator);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
